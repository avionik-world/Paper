From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Niklas <57962465+niklasnieberler@users.noreply.github.com>
Date: Wed, 21 Aug 2024 18:50:38 +0200
Subject: [PATCH] add dependency manager


diff --git a/src/main/java/io/papermc/paper/dependency/DependencyManager.java b/src/main/java/io/papermc/paper/dependency/DependencyManager.java
new file mode 100644
index 0000000000000000000000000000000000000000..99437773ad0a883c37f1c5e9f7cb183ccf9e3743
--- /dev/null
+++ b/src/main/java/io/papermc/paper/dependency/DependencyManager.java
@@ -0,0 +1,62 @@
+/*
+ * Copyright (C) 2024 Velocity Contributors
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.
+ */
+
+package io.papermc.paper.dependency;
+
+import java.io.File;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.Objects;
+
+public class DependencyManager {
+
+    private final File directory = new File("dependencies");
+
+    public DependencyManager() {
+        checkFolderExists();
+    }
+
+    public List<File> blockedFiles = new ArrayList<>();
+
+    public void checkFolderExists() {
+        if (!this.directory.exists()) {
+            this.directory.mkdirs();
+        }
+    }
+
+    public List<URL> getDependencyUrls() {
+        return getDependencyFiles().stream().map(file -> {
+            try {
+                return file.toURI().toURL();
+            } catch (MalformedURLException e) {
+                throw new RuntimeException(e);
+            }
+        }).toList();
+    }
+
+    public List<File> getDependencyFiles() {
+        return Arrays.stream(Objects.requireNonNull(this.directory.listFiles()))
+            .filter(File::isFile)
+            .filter(file -> file.getName().endsWith(".jar"))
+            .filter(file -> !blockedFiles.contains(file))
+            .toList();
+    }
+
+}
diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index 4705c1d91e39fcc3c608b1f1a38a30d063ccf06e..87eaae9883576fd991356a61a9be13b162101ce3 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -14,6 +14,7 @@ import java.util.Set;
 import java.util.UUID;
 import java.util.function.Consumer;
 import java.util.logging.Logger;
+import io.papermc.paper.dependency.DependencyManager;
 import org.bukkit.Warning.WarningState;
 import org.bukkit.advancement.Advancement;
 import org.bukkit.block.data.BlockData;
@@ -68,6 +69,8 @@ import org.jetbrains.annotations.Nullable;
 public final class Bukkit {
     private static Server server;
 
+    public static DependencyManager dependencyManager = new DependencyManager();
+
     /**
      * Static class cannot be initialized.
      */
diff --git a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
index 7e4f7cb2afbc145e532285c793573ad107bc3033..40a1390394f29069ad2669f09b0c9109c6223674 100644
--- a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
@@ -22,6 +22,8 @@ import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
 import java.util.jar.Manifest;
 import java.util.logging.Level;
+import io.papermc.paper.dependency.DependencyManager;
+import org.bukkit.Bukkit;
 import org.bukkit.plugin.InvalidPluginException;
 import org.bukkit.plugin.PluginDescriptionFile;
 import org.bukkit.plugin.SimplePluginManager;
@@ -59,6 +61,13 @@ public final class PluginClassLoader extends URLClassLoader implements io.paperm
         super(file.getName(), new URL[] {file.toURI().toURL()}, parent);
         this.loader = null; // Paper - pass null into loader field
 
+        DependencyManager dependencyManager = Bukkit.dependencyManager;
+        for (File dependencyFile : dependencyManager.getDependencyFiles()) {
+            addURL(dependencyFile.toURI().toURL());
+            dependencyManager.blockedFiles.add(dependencyFile);
+            System.out.println("loading " + dependencyFile.getName());
+        }
+
         this.description = description;
         this.dataFolder = dataFolder;
         this.file = file;
